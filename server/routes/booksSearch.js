const express = require("express");
const router = express.Router();
const mongoose = require('mongoose')
const UserBooks = require("../models/book.model"); // –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏
const fetch = require("node-fetch"); // –î–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≤ Google API
const verifyToken = require("../middleware/auth"); // –ó–∞—â–∏—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤

const api = 'https://www.googleapis.com';
const apiKey = process.env.REACT_APP_GOOGLE_BOOKS_API_KEY;
mongoose.connect('mongodb://localhost:27017/book-app')

// üîç –ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≤ Google Books API
router.get("/books/search", verifyToken, async (req, res) => {
    const { title } = req.query;
    const userId = req.user.userId; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–æ–∫–µ–Ω–∞

      console.log(`[SEARCH] –ù–∞—á–∞–ª–æ –ø–æ–∏—Å–∫–∞ –∫–Ω–∏–≥–∏. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}, –ó–∞–ø—Ä–æ—Å: "${title}"`);
    try {
        // –ò—â–µ–º –∫–Ω–∏–≥—É –≤ –±–∞–∑–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userBooks = await UserBooks.findOne({ userId });

        if (userBooks) {
            const book = userBooks.books.find((b) => b.title.toLowerCase() === title.toLowerCase());
            if (book) {
                return res.json({ source: "database", status: book.status, title: book.title, bookId: book.bookId, author: book.author });
            }
        }

        const googleResponse = await fetch(`${api}/books/v1/volumes?q=${encodeURIComponent(title)}&langRestrict=ru&key=${apiKey}`);

        const googleData = await googleResponse.json();
      //  console.log("–î–∞–Ω–Ω—ã–µ Google API:", googleData);
        return res.json({ source: "google", items: googleData.items });
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", error);
        res.status(500).json({ error: "–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
    }
});

module.exports = router;
