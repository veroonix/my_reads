//const API_URL = 'http://localhost:1337';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ accessToken
async function getAccessToken() {
    const refreshToken = localStorage.getItem('refreshToken');
    const response = await fetch(`/api/token`, {
        method: 'POST',
        credentials: 'include',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ refreshToken: refreshToken })
        
    });

    if (!response.ok) {
       // throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω');
        window.location.href = '/login' //–ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ —Å–≤–æ—é
    }

    const data = await response.json();
    console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π accessToken:", data.accessToken);
    return data.accessToken;
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏—Å—Ç—ë–∫ –ª–∏ accessToken
function isTokenExpired(token) {
    if (!token) return true; // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ –∏—Å—Ç–µ–∫—à–∏–º

    try {
        const { exp } = JSON.parse(atob(token.split('.')[1])); // –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è
        return Date.now() >= exp * 1000; // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å—Ç—ë–∫ –ª–∏ —Ç–æ–∫–µ–Ω
    } catch (error) {
        console.error(" –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:", error);
        return true;
    }
}

// –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è API-–∑–∞–ø—Ä–æ—Å–æ–≤
async function fetchWithAuth(url, options = {}) {
    let accessToken = sessionStorage.getItem('accessToken'); // üîπ –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞
    //console.log(" –¢–µ–∫—É—â–∏–π accessToken:", accessToken);
    if (isTokenExpired(accessToken)) {
        console.log("üîÑ AccessToken –∏—Å—Ç—ë–∫! –û–±–Ω–æ–≤–ª—è–µ–º...");
        accessToken = await getAccessToken();
        sessionStorage.setItem("accessToken", accessToken);
    }
    console.log("–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω:", accessToken);

    let response = await fetch(`${url}`, {
        ...options,
        headers: {
            ...options.headers,
            Authorization: `Bearer ${accessToken}`,
        },
        credentials: "include",
    });

    if (response.status === 204) {
        console.log("–û—Ç–≤–µ—Ç –±–µ–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (204), –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.");
        return null; 
    }

    if (!response.ok) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", response.status);
        throw new Error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞");
    }

    console.log(" –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!");
    return response.json();
}

export { fetchWithAuth };
